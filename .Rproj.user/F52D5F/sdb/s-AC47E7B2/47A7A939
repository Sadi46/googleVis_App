{
    "collab_server" : "",
    "contents" : "library(googleVis)\n\n\n# fill checkboxes #############################################################\n# dataframe (for scatter etc)\nobserve({\n  # fill checkbox \n  updateSelectInput(session, \"dataframe\",\n                    label = \"Dataframe\",\n                    choices = colnames(include$subdata))\n})\n# variable names\nobserve({\n  # get numeric variables\n  numerics_integers<- as.data.frame(include$subdata) %>% select_if(is.numeric)\n  list<-colnames(numerics_integers)\n  # fill checkbox (prevent multiple)\n  updateSelectInput(session, \"variableA\",\n                     label = \"Numeric Variables\",\n                     choices = c(Choose='', list))\n  })\nobserve({\n  updateCheckboxGroupInput(session, \"variableB\",\n                           label = \"X-Variables\",\n                           inline=TRUE,\n                           choices = colnames(include$subdata),\n                           selected = \"\")\n})\nobserve({\n  updateCheckboxGroupInput(session, \"variableC\",\n                           label = \"Y-Variables\",\n                           inline=TRUE,\n                           choices = colnames(include$subdata),\n                           selected = \"\")\n})\n\n# make variable input reactive for re-use in multiple charts (instead of\n# putting the input in objects in every rendering block)\nobserve({\n  req(input$variableA)\n  # column\n  include$numdata <- include$subdata[,input$variableA]\n  # column name\n  include$num <- input$variableA  \n})\nobserve({\n  # column\n  include$Xdata <- include$subdata[,input$variableB]\n  # column name\n  include$x <- input$variableB\n  # column name\n  include$y <- input$variableC\n})\nobserve({\n  include$dataframe<-include$subdata[,input$dataframe]\n})\n                             \n\n# get table in tabsetpanel\noutput$view1 <- renderGvis({\n  req(include$subdata)\n  gvisTable(include$subdata,\n            options=list(page='enable',\n                         cssClassNames = \"{headerRow: 'headrow', tableRow: 'tablerow'}\",\n                         alternatingRowStyle = FALSE,\n                         gvis.editor='enable'))  \n})\n\n\n# get histogram and barplots \nobserveEvent(input$histogram,{\n  #change tabsetpanel\n  updateTabsetPanel(session, \"chart1\", selected=\"Histogram\")\n  output$view2 <- renderGvis({\n    # control error message on missing input + give hints\n    validate(\n      need(!is.null(input$variableA),\n           'Histogram: Pick one  numeric variable'))\n    # prevent error of zero length when return to zero variables\n    if(is.null(include$numdata)) return()\n    gvisHistogram(as.data.frame(include$numdata),\n                  options= list(\n                    legend=\"none\",\n                    width=400, height=360,\n                    #legend=\"{position: 'top', maxLines: 2 }\",\n                    title= paste(\"Histogram\", include$num, sep=\" \"),\n                    titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\"\n                    )) \n  })\n  output$view3 <- renderGvis({\n    # control error message on missing input + give hints\n    validate(\n      need(!is.null(input$variableB) & !is.null(input$variableC),\n           'ColumnChart: Pick one x-variable and one or more y-variables'))\n    # prevent error when returned to zero variables\n    if(is.null(include$x) | is.null(include$y)) return()\n    gvisColumnChart(as.data.frame(include$subdata),\n                    xvar= include$x,\n                    yvar= include$y,\n                    options= list(\n                      width=400, height=360,\n                      title= paste(\"ColumnChart\", include$x, sep=\" \"),\n                      titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\",\n                      bar=\"{groupWidth:'300%'}\"))\n                    #legend=\"{position: 'top', maxLines: 2 }\",\n                                 # hAxis=\"{title: x_variable}\"\n                    #             colors=\"['#5C3292', '#1A8763', '#871B47']\",\n                                 \n                   \n  })\n  output$view4 <- renderGvis({\n    # control error message on missing input + give hints\n    validate(\n      need(!is.null(input$variableB) & !is.null(input$variableC),\n                   'BarChart: Pick one x-variable and one or more y-variables'))\n    # prevent error when returned to zero variables\n    if(is.null(include$x) | is.null(include$y)) return()\n    gvisBarChart(as.data.frame(include$subdata),\n                 xvar= as.character(include$x) ,\n                 yvar= as.character(include$y),\n                 options= list(\n                   width=400, height=360,\n                   isStacked=TRUE,\n                   title=paste(\"BarChart\", include$x, sep=\" \"),\n                   titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\",\n                   bar=\"{groupWidth:'300%'}\"))\n  })\n })\n# get scatter chart\nobserveEvent(input$scatter,{\n  updateTabsetPanel(session, \"chart1\", selected=\"Scatter\")\n  output$view5 <- renderGvis({\n    # prevent error message\n    validate(need(input$dataframe, 'Choose variables'))\n    # scatterchart\n    xaxis<- names(include$dataframe[1])\n    yaxis<- names(include$dataframe[2])\n    gvisScatterChart(include$dataframe,\n                     options=list(\n                       legend=\"none\",\n                       #lineWidth=2, pointSize=0,\n                       title=\"Women\",\n                       hAxis=\"{title:'xaxis'}\", \n                       vAxis=\"{title:'yaxis'}\",\n                       width=300, height=300))\n    })\n  })\n\nobserveEvent(input$motion,{\n  updateTabsetPanel(session, \"chart1\", selected=\"Motion\")\n  output$view6 <- renderGvis({\n    # motion chart\n    data<-include$subdata[,input$dataframe]\n    id <- include$x #input$dataframe[1] \n    time <- as.numeric(include$y)\n    # xvar<-input$dataframe[3]\n    # yvar<-input$dataframe[4]\n    # colorvar<-input$dataframe[5]\n    # sizevar<-input$dataframe[6]\n    # (xvar, yvar,colorvar, sizevar), will be assumed to be the next columns\n    gvisMotionChart(as.data.frame(include$subdata), idvar = input$variableB, timevar = input$variableC\n                    #, \n                    #xvar = xvar,  yvar = yvar,\n                    #colorvar = colorvar, sizevar = sizevar\n                    #, #date.format = \"%Y/%m/%d\",\n                    #options = list(), chartid\n                    )\n    #gvisMotionChart(include$subdata, factor, time)\n    })\n  })\n\n# observeEvent(input$line,{\n#   updateTabsetPanel(session, \"chart1\", selected=\"Line\")\n#   \n#   \n#   output$view7 <- renderGvis({\n#     gvisLineChart(df, xvar=, yvar=c(),\n#                   options=list(\n#                     series=\n#                     vAxes=\"[{title:'val1'}, {title:'val2'}]\"\n#                   ))\n#   })\n# })\n\n# })\n\n",
    "created" : 1490301858450.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1971714001",
    "id" : "47A7A939",
    "lastKnownWriteTime" : 1496767391,
    "last_content_update" : 1496767391338,
    "path" : "D:/user/Documents/googleVis_App/googleVis_server.R",
    "project_path" : "googleVis_server.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}